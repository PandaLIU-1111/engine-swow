name: Swow Engine Test

on:
  push:
  pull_request:
  schedule:
    - cron:  '0 10 * * *'

jobs:
  ci:
    name: Test for PHP ${{ matrix.php-version }} Swow ${{ matrix.sw-version }}
    runs-on: "${{ matrix.os }}"
    env:
      SWOW_VERSION: ${{ matrix.sw-version }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '7.3', '7.4', '8.0' ]
        sw-version: [ 'v0.1.0-nightly20210601', 'develop' ]
      max-parallel: 6
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpize
          coverage: none
          extensions: curl,openssl
      - name: Build Swow
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
          wget https://github.com/swow/swow/archive/"${SWOW_VERSION}".tar.gz -O swow.tar.gz
          mkdir -p swow
          tar -xf swow.tar.gz -C swow --strip-components=1
          rm swow.tar.gz
          cd swow/ext || exit

          phpize
          ./configure --enable-swow --enable-swow-debug --enable-swow-ssl --enable-swow-curl
          make -j "$(nproc)"
          sudo make install
          sudo sh -c "echo extension=swow > /etc/php/${{ matrix.php-version }}/cli/conf.d/swow.ini"
          php --ri swow
      - name: Setup Packages
        run: composer install -o
      - name: Build Docker
        run: docker build . -t swow:latest --build-arg PHP_VERSION=${{ matrix.php-version }}
      - name: Run Server
        run: |
          docker run --entrypoint php -p 9501:9501 -d swow:latest examples/http_server.php
          docker run --entrypoint php -p 9502:9502 -d swow:latest examples/tcp_server.php
      - name: Run Test Cases
        run: |
          composer analyse
          composer test
